@model IEnumerable<VehicleViewModel>

@{
    ViewData["Title"] = "Garage";
}

<div class="container mt-5">
    <h1 class="text-center">@ViewData["Title"]</h1>

    <div class="alert alert-info text-center">
        There are <strong>@ViewBag.AvailableSpots</strong> spots available in the garage.
    </div>

    <div class="d-flex justify-content-center mb-3">
        @if (ViewBag.AvailableSpots > 0)
        {
            <button type="button" class="btn btn-success px-4 me-3" onclick="location.href='@Url.Action("Create", "Vehicles")'">
                Park Vehicle
            </button>
        }

        <button type="button" class="btn btn-primary px-4 me-3" onclick="location.href='@Url.Action("Statistics", "Vehicles")'">
            Garage Statistics
        </button>
    </div>

    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th>
                    <a asp-action="Garage"
                       asp-route-sortColumn="VehicleType"
                       asp-route-sortOrder="@(ViewData["CurrentSort"]?.ToString() == "VehicleType_asc" ? "desc" : "asc")"
                       class="text-dark">
                        <!-- Use Bootstrap's text-dark class -->
                        @Html.DisplayNameFor(model => model.VehicleType)
                        @(ViewData["CurrentSort"]?.ToString() == "VehicleType_asc" ? "▼" : "▲")
                    </a>
                    <form asp-action="Garage" class="d-inline">
                        <input type="text" name="searchTerm" placeholder="Filter by vehicle type" class="form-control filter-input" />
                    </form>
                </th>
                <th>
                    <a asp-action="Garage"
                       asp-route-sortColumn="RegistrationNumber"
                       asp-route-sortOrder="@(ViewData["CurrentSort"]?.ToString() == "RegistrationNumber_asc" ? "desc" : "asc")"
                       class="text-dark">
                        <!-- Use Bootstrap's text-dark class -->
                        @Html.DisplayNameFor(model => model.RegistrationNumber)
                        @(ViewData["CurrentSort"]?.ToString() == "RegistrationNumber_asc" ? "▼" : "▲")
                    </a>
                    <form asp-action="Garage" class="d-inline">
                        <input type="text" name="searchTerm" placeholder="Filter by registration number" class="form-control filter-input" />
                    </form>
                </th>
                <th>
                    <a asp-action="Garage"
                       asp-route-sortColumn="ArrivalTime"
                       asp-route-sortOrder="@(ViewData["CurrentSort"]?.ToString() == "ArrivalTime_asc" ? "desc" : "asc")"
                       class="text-dark">
                        <!-- Use Bootstrap's text-dark class -->
                        @Html.DisplayNameFor(model => model.ArrivalTime)
                        @(ViewData["CurrentSort"]?.ToString() == "ArrivalTime_asc" ? "▼" : "▲")
                    </a>
                    <form asp-action="Garage" method="get" class="d-inline">
                        <select name="timeFilter" class="form-control form-select" onchange="this.form.submit()">
                            <option value="">Filter by time</option>
                            <option value="minute">Past Minute</option>
                            <option value="hour">Past Hour</option>
                            <option value="day">Past Day</option>
                        </select>
                    </form>
                </th>
 <th>
                    
                        <a asp-action="Garage"
                           asp-route-sortColumn="ParkingSpot"
                           asp-route-sortOrder="@(ViewData["CurrentSort"]?.ToString() == "ParkingSpot_asc" ? "desc" : "asc")"
                           class="text-dark me-2">
                            Parking Spot
                            @(ViewData["CurrentSort"] ?.ToString() == "ParkingSpot_asc" ? "▼" : "▲")
                        </a>
<form asp-action="Garage" method="get" class="d-inline">
    <select name="sortOrder" class="form-control form-select" onchange="this.form.submit()">
        <option value="asc">Ascending</option>
        <option value="desc">Descending</option>
    </select>
    <input type="hidden" name="sortColumn" value="ParkingSpot" />
</form>
                   
                </th>



            </tr>
        </thead>
      
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.VehicleType)</td>
                    <td>@Html.DisplayFor(modelItem => item.RegistrationNumber)</td>
                    <td>@Html.DisplayFor(modelItem => item.ArrivalTime)</td>
                    <td>@Html.DisplayFor(modelItem => item.ParkingSpotsTaken)</td>
                    <td>
                        <a class="btn btn-sm btn-warning" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a class="btn btn-sm btn-info" asp-action="Details" asp-route-id="@item.Id">Details</a>
                        <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.Id">Check out</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <h2 class="mt-5">Parking Spot Overview</h2>
    <div class="row">
        @foreach (var spot in ViewBag.ParkingStatus)
        {
            <div class="col-2 mb-2">
                <div class="p-3 border text-center @(spot.IsOccupied ? "bg-danger text-white" : "bg-success text-white")">
                    @if (spot.IsOccupied)
                    {
                        <strong>@spot.RegistrationNumber</strong>
                    }
                    else
                    {
                        <strong>Spot @spot.SpotNumber</strong>
                    }
                    <br />
                    @(spot.IsOccupied ? "Occupied" : "Available")
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.querySelectorAll('.filter-input').forEach(input => {
            input.addEventListener('keydown', function (event) {
                if (event.key === 'Enter') {
                    event.preventDefault();
                    this.form.submit();
                }
            });
        });
    </script>
}
